#!/bin/bash

function listParts
{
    ls -1 | sort
}

function getFilesFromList
{
    fileName="$1"

    grep -v '^\(\|#.*\)$' "$fileName"
}

function doInclude
{
    local file="$1"

    if [ ! -e "$file" ]; then
        echo "Could not find file \"$file\"." >&2
        return
    fi

    while read line; do
        read pC0 pDo command p1 p2 p3 p4 p5 p6 p7 p8 < <(echo "$line")
        identifier="$pC0 $pDo"
        if [ "$identifier" == '<!-- do' ]; then
            doCommand "$command" "$p1" "$p2" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"
        elif [ "$identifier" == '<!-- #' ]; then
            # Local comments that shouldn't make it to the final file.
            true
        else
            echo "$line"
        fi
    done < "$file"
}

function doCommand
{
    local command="$1"
    local p1="$2"
    local p2="$3"
    local p3="$4"
    local p4="$5"
    local p5="$6"
    local p6="$7"
    local p7="$8"
    local p8="$9"

    case "$command" in
        "include")
            doInclude "$p1"
        ;;
        *)
            echo "cvCompile: Unknown command: \"$command\" in \"$line\"" >&2
        ;;
    esac
}

function doCompile
{
    name="$1"
    variantFile="cvData/variant/$name.md"
    outFile="compiled/$name.md"

    if [ ! -e "$variantFile" ]; then
        echo "Could not find variant \"$name\" in \"$variantFile\" from \"$(pwd)\"."
        exit 1
    fi

    cd cvData

    echo "Compiling \"$name\"."
    rm -f "$outFile"
    touch "$outFile"

    doInclude "../$variantFile" >> "$outFile"

    cd ..
}


if [ "$1" == '' ]; then
    while read variant; do
        doCompile "$variant"
    done < <(cvList)
else
    doCompile "$1"
fi
