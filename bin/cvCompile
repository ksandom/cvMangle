#!/bin/bash

function listParts
{
    ls -1 | sort
}

function getFilesFromList
{
    fileName="$1"

    grep -v '^\(\|#.*\)$' "$fileName"
}

function doInclude
{
    local file="$1"

    if [ "$context" != '' ]; then
        file="$(echo "$file" | sed "s#~\!context\!~#$context#g")"
    fi

    if [ ! -e "$file" ]; then
        echo "Could not find file \"$file\"." >&2
        return
    fi

    while IFS= read -r line; do
        read -r pC0 pDo command p1 p2 p3 p4 p5 p6 p7 p8 < <(echo "$line")
        identifier="$pC0 $pDo"
        if [ "$identifier" == '<!-- do' ]; then
            doCommand "$command" "$p1" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"
        elif [ "$identifier" == '<!-- #' ]; then
            # Local comments that shouldn't make it to the final file.
            true
        else
            echo "$line"
        fi
    done < "$file"
}

function doForEach
{
    local collection="$1"
    local command="$2"
    local p1="$3"
    local p2="$4"
    local p3="$5"
    local p4="$6"
    local p5="$7"
    local p6="$8"
    local p7="$9"

    while read item; do
        context="$collection/$item"
        doCommand "$command" "$p1" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7"
        unset context
    done < <(getCollection "$collection")
}

function getCollection
{
    cd "$1"
    ls -1
    cd ~-
}

function doCommand
{
    local command="$1"
    local p1="$2"
    local p2="$3"
    local p3="$4"
    local p4="$5"
    local p5="$6"
    local p6="$7"
    local p7="$8"
    local p8="$9"

    case "$command" in
        'include')
            doInclude "$p1"
        ;;
        'forEach')
            doForEach "$p1" "$p2" "$p3" "$p4" "$p5" "$p6" "$p7" "$p8"
        ;;
        *)
            echo "cvCompile: Unknown command: \"$command\" in \"$line\"" >&2
        ;;
    esac
}

function doCompile
{
    name="$1"
    variantFile="cvData/variant/$name.md"
    outFile="compiled/$name.md"

    if [ ! -e "$variantFile" ]; then
        echo "Could not find variant \"$name\" in \"$variantFile\" from \"$(pwd)\"."
        variantFile="cvData/custom/$name.md"
        if [ -e "$variantFile" ]; then
            echo "Found \"$variantFile\" instead. Continuing."
        else
            exit 1
        fi
    fi

    cd cvData

    echo "Compiling \"$name\"."
    rm -f "$outFile"
    touch "$outFile"

    doInclude "../$variantFile" >> "$outFile"

    cd ..
}

# Don't run if we aren't in the right place.
if [ ! -e "cvData" ]; then
    echo "$variant: Expected to see the cvData directory. Exiting." >&2
    exit 1
fi


# Figure out what to compile.
if [ "$1" == '' ]; then
    while read variant; do
        doCompile "$variant"
    done < <(cvList)
else
    doCompile "$1"
fi
