#!/bin/bash
# Build a variant, or all variants.
# Copyright (C) 2023  Kevin Sandom

numberingConfig="cvData/cvNumbering"

function doBuild
{
    local name="$1"
    local file="cvData/compiled/$name.md"
    local version="$2"
    local type="${3:-pdf}"

    cvBuildFile "$file" "$name" "$version" "$type"
}

# Don't run if we aren't in the right place.
if [ ! -e "cvData" ]; then
    echo "Expected to see the cvData directory. Exiting." >&2
    exit 1
fi

# Separate numbering.
# Custom CVs don't need to follow the same numbering as everything else. However anything non-custom should share the same numbering to avoid potentially going back in time.
if [ "$1" != '' ]; then
    if ! cvList | grep -q "$1"; then
        if cvList custom | grep -q "$1"; then
            numberingDir="cvData/specificNumbering"
            mkdir -p "$numberingDir"
            numberingConfig="$numberingDir/$1"
        fi
    fi
fi


# Disable cvBuildFile's auto numbering.
export CV_NO_AUTO=1

# Derive the next number.
today="$(date +%Y-%m-%d)"
if [ -e "$numberingConfig" ]; then
    . "$numberingConfig"

    if [ "$lastDay" == "$today" ]; then
        let versionNumber=$versionNumber+1
    else
        lastDay="$today"
        versionNumber=0
    fi
else
    lastDay="$today"
    versionNumber=0
fi

echo "Version: $versionNumber   Last day: $lastDay   Today: $today"

# Write back the config for the next run.
echo "# Versioning info for file names.
versionNumber=$versionNumber
lastDay=$lastDay" > "$numberingConfig"

# Choose how to build the CVs based on what input we got.
if [ "$1" == '' ]; then
    while read variant; do
        doBuild "$variant" "$versionNumber" "$type" &
    done < <(cvList)
    wait
else
    variant="$1"
    type="$2"
    doBuild "$1" "$versionNumber" "$type"
fi

